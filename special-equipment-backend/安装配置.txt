java13升级中，CentOS；
Java SE Development Kit 13(JDK13) 13.0.1下载  = https://www.7down.com/soft/344930.html
windown10安装软件打开时以管理员身份安装软件不然容易出问题,jdk13.0.2没有jre文件夹，所以需要手动生成;
win10安装JDK13.0.2 https://blog.csdn.net/eee528/article/details/104109872
环境变量JAVA_HOME C:\Program Files\Java\jdk1.8.0_121   E:\Program Files\jdk13-1
JRE_HOME CLASSPATH先不管了；
JRE运行时{我是开发的}先不管了；
IDEA右上角的启动project structure对话框直接修改每个工程单独jdk路径。
gradle升级中，gradle-6.3-rc-1下载解压 = https://services.gradle.org/distributions/
要Gradle Wrapper去统一Gradle的版本，避免开发团队因为Gradle版本不一致而产生问题。
配置环境变量 D:\proj\gradle-6.3\bin。全局配置=https://www.jianshu.com/p/6b9cd92c4920
GRADLE_USER_HOME 仓库= E:\del\repository
Gradle 安装与配置 https://www.cnblogs.com/NyanKoSenSei/p/11458953.html
GRADLE_HOME/init.d/目录下的init.gradle
IDEA直接配置加上jar远端库=使用阿里的依赖库=https://www.cnblogs.com/lihuawei/p/12460193.html
java还未支持协程Fiber；js其实单线程。
使用 Undertow 替换掉 Tomcat;  工程：compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: '2.2.5.RELEASE'
移除SpringMvc相关组件以及Tomcat，Jetty，Undertow等Web容器，使用Netty构建HttpServer来实现轻量级的RestfulAPIs。
高性能 Web 服务框架=Undertow、Vert.x 和 Netty ;  Spring WebFlux 默认是使用 Netty 作为 Web 容器的。

https://github.com/graphql-java-kickstart/samples

windows 10中Tomcat安装和部署的教程  https://www.jb51.net/article/173324.htm ; 端口号冲突 JRE=jdk目录 .bin\startup.bat。
@SpringBootApplication没有web.xml而老Spring MVC项目web.xml添filter-mapping、servlet-mapping的。https://www.pocketdigi.com/20170527/1576.html
Jenkins发布部署 Kubernetes集群；拉取源码选择git,http://代码服务器（gitbucket）；GitBucket自己的GitHub。码云Gitee= Git代码托管;网站配置免费SSL证书;
GraphQLHttpServlet:GraphQLConfiguration->createSchema->SchemaParser+makeExecutableSchema;
启动初始化链条=HostConfig->tomcat内嵌容器->initServlet->GraphQLHttpServlet.init()->GraphQLConfiguration->createSchema()->SchemaGenerator:不可能重新改file("schema.graphqls")。
而对每个http请求流程=SocketProcessorBase<NioChannel>：FilterChain：WsFilter->初始化connection->doFilter()->HttpServlet:service(req,resp)->AbstractGraphQLHttpServlet.doPost+doGet();
单个前端<ApolloProvider client={client}>只能有一个Endpoint==一个Servlet;单个SPA页就不好做的。反而单个后端容易做多个接口Endpoint多个Schema path。
Jetty 和 undertow 服务器SpringBoot 使用轻量级的 undertow 容器替代重量级 Tomcat https://hacpai.com/article/1575252759539
三个集成 directives + servlet-hello-world + 最後那個,,;
rest方式发送包{   "query": "{hello(value394:\"sdfds1124cv\") }" }

Gradle问题：在IDEA新建立时gradle java工程,多模块。IDEA在配置Build>Gradle:有个radio三选一很关键。
Use default gradle wrapper(recommended) 需要配套修改/gradle/wrapper gradle/wrapper/gradle-wrapper.properties的版本号，distributionUrl=https\://downloads.gradle-dn.com/distributions/gradle-6.3-rc-1-all.zip
distributionUrl=https\://services.gradle.org/distributions/gradle-4.10-all.zip
gradle还和Java版本也有关啊[5.6.4]，gradle自己还有版本问题，Gradle JVM版本设置java10可行。
build.gradle里面wrapper{gradleVersion='6.3-rc-1'}直接运行3行脚本就可初始化gradle/wrapper/*，但IDEA设置Gradle JVM版本到/repository/wrapper/dists/gradle/.。Gradle JVM不要选Use Project JDK/JAVAHOME;
测试通过gradle-5.6.4 刷新工程的时候需要设置Gradle JVM到低版本，然后正常编译恢复高版本JDK};
gradle/wrapper/gradle-wrapper.properties要自动下载，dists\.\gradle-5.6.4\init.d还不能加init.gradle,就通过了，可能下载文件不正宗的。
https://github.com/graphql-java-kickstart/graphql-spring-boot
参考graphql-spring-boot-autoconfigure\x.graphql.boot.GraphQLWebAutoConfiguration，复制和定做特别的接口1，2 xxxAutoConfiguration。

bean注入@Qualifier存在多个同类型bean时，通过value值选择bean方法名字就是Bean的ID；xxx(@Qualifiler(value="d") My my);  https://www.wandouip.com/t5i352131/

添加ServletConfiguration模式不能處理數據{Resolver不執行}能報schema語法異常。PublicGqwAutoConfiguration配置路綫的能QueryResolver數據卻無法返回數據(directive能執行)同時不能報語法異常。
目標是com.coxautodev.graphql.tools.SchemaParser的中同名SchemaParser定制替換{@Autowired SchemaParser+ build變成新的SchemaParser}。
若/config/PublicGqwAutoConfiguration.java移除了就能恢复旧正常的graphql/iql，而Servlet模式的未受此影响。
@某些注解是编译用的，IDEA配置 Build>Compiler>Annotation Processors勾上。
oauth2..JwtAuthenticationToken;认证方式＝jwkSetUri关键第三方认证redirectUri Provider userInfoUri还要给UserDetailsService配套存储Repository。
GitHub私有库国内加速访问的办法 DNS污染？  https://www.sohu.com/a/312804771_100213241
POST http://localhost:9000/graphql
Content-Type: application/json; charset=utf-8
Cache-Control: no-cache

{   "query": "{hello(value2:\"sdfds1124cv\") }" }
Webflux(REST || Thymeleaf模板)Reactive Web,Reactor项目实现Reactive Streams,感觉graphql是并行竞争关系，但是Webflux是REST，对标WebMVC模板。实际上starter-web对标starter-webflux二选一。
Webflux核心使用了异步资源加载！需要ReactiveMongoRepository，无法用原来数据库@Entity+原来Repository。给客户应答可能要分多次/数据拆分陆续返回模式。 前端需要EventSource SSE的JS；
看Webflux其实在请求应答返回数据很少的就毫无效果哦！graphql分页数据。实体表多页查询，一次要获取很多对象吗，正常网页需要吗，除非下载转储文件这类的功能｛毕竟使用频率较少｝。
web容器更换Undertow依赖支持HTTP、HTTPS、HTTP/2多路复用机制；  http://www.imooc.com/article/274138
免费申请SSL证书  https://freessl.org

POST http://localhost:8673/graphql
Content-Type: application/json; charset=utf-8
Cache-Control: no-cache
{   "query": "{hello2(value1:\"sdsR65adaf\") }" }
  @Bean
  @ConditionalOnMissingBean
  public GraphQLSchemaServletProvider graphQLSchemaProvider(GraphQLSchema schema) {
    return new DefaultGraphQLSchemaServletProvider(schema);
  }
import { WebSocketLink } from 'apollo-link-ws';有加了一层。
new WebSocket('ws://localhost:8673/subscriptions')
websocket和http的endpoint是路径/A/B，不可以嵌套，否则上级目录注册的servlet优先抢走处理。
谷歌Chrome引入SameSite cookie将提高隐私安全性能，可保证仅通过HTTPS连接访问跨站cookie。限制cookie被第三方网站追踪。
Spring Security——基于表达式的权限控制，Spring 表达式语言(Spring EL)；SpEL 操作符; 正则表达式匹配?
@PreAuthorize("hasRole('ROLE_'.concat(this.class.simpleName))")
prisma=类比后端graphQL服务器。
jcache是一种缓存门面规范，并不包含具体缓存实现;
org.hibernate:hibernate-ehcache:建立在Ehcache 2上；现推荐hibernate-jcache它可支持Ehcache 3包。
高版本ehcache 3;　http://www.ehcache.org/documentation/3.8/
1 本地缓存Ehcache、Caffeine; ; 2 分布式缓存 Client-Server模式缓存Redis分布式缓存Redis;
Hazlecast的商用授权下载商用版本这些配置才能生效？ssl传输Wan。
ClusteredLocalCachedRedisRegionFactory仅限于Redisson PRO版本  https://stackoverflow.com/questions/7650129/redis-as-hibernate-second-level-cache

！！Redisson文档细节，Hibernate版本还算独立的？　 http://www.voidcc.com/redisson
开启 redis-server.exe redis.windows.conf   https://www.cnblogs.com/wuwuyong/p/11697643.html
maven jar冲突问题<exclusions><exclusion>  　

redisson详细配置多方案　https://blog.csdn.net/zilong_zilong/article/details/78252037
hibernate-redis.properties文件不需要了。
redis官方文档；每种集成框架模式场合的配置都有差异,缓存对接目的地不同: https://github.com/redisson/redisson/wiki/Table-of-Content；
IMDG缓存到底和那一个框架hibenate做集成的 https://github.com/redisson/redisson/tree/master/redisson-hibernate
修改redisson超时设置后要删除redis存储文件才行。若有region有用于COLLECTION> ENTITY > NATURAL_ID按这顺序配ttl时间。
启动指定profiles; java -jar -Dspring.profiles.active=dev  demo-0.jar  //application-dev.properties：开发
Spring-security-oauth2之DaoAuthenticationProvider用于响应UsernamePasswordAuthenticationToken身份验证请求
Infinispan 支持hibernate分布式二级缓存　Key/Value数据库　　@Cache(usage = CacheConcurrencyStrategy.READ_WRITE, region = "")如对数据没有强一致性诉求可考虑采用异步模式(建议Replication Queue)；
 配置Infinispan例子 https://infinispan.org/tutorials/
ignite可用上SSL and TLS传输；在SQL层还不支持事务一致性，ignite不是关系数据库;  "分布式数据网格”Hazlecast IMDG商用版本这些配置才能生效？ssl传输/WAN/。
ignite支持Hibernate L2/Spring Cache{+JCache}/MyBatis分别有各自的方案  https://apacheignite-mix.readme.io/docs/hibernate-l2-cache
Hibernate手册type(p)=A; type(p) in (B,C);  coalesce(name,nick,''); date<{d '2000-01-01'}; current_timestamp() year(current_date()) locate(,,)
　 not member of;  maxelement(holidays)；where kit member of m.kittens；where 3 > all elements(p.scores)；
HQL统计select new map( max(c.bodyWeight) as max, min() as min, count(*) as n ) from Cat c；new list(,name ,); CAST(实体类);

GraphQL Schema 图数据库Dgraph; Union联合类型成员须是具体对象类型，不能用接口或其他联合型来 | ; input型给后端便利。C implements F 要求A必须包含F的全部字段并相同，
 内联片段 ... on A { adds }; Union是变体=得使用条件片段... on W 解析__typename; implements B,C{ }; type D{x: unionX;} ; 无法A extend B{};
GraphQL接口返回[union]的对Java实体类有限制严格/报错no class could be found for that type。
Infinispan配置文档 https://infinispan.org/docs/stable/titles/integrating/integrating.html#integrating_jpa_hibernate
Hibernate cache策略: transactional等同read-write策略处理。
Infinispan集群<stack-file path="/default-jgroups-tcp.xml}"/>配置在infinispan-core.jar/default-configs/下。<transport cluster="infinispan-hibernate-cluster"/>是集群群号。
接入许可在<server><security><security-realms><security-realm >设置认证<server-identities><ssl>。
H2L查询缓存"query"默认对应Infinispan配置文件里面"local-query";<memory max-count="K"/>这对查询Hash-Key个数限制而不是结果集的条数限制=K*N。

MySQL性能问题都是内存规模受限。innodb_buffer_pool_size=7G默认128M。
索引列不允许NULL列?; 离散度大（不同的值多）的列，放在联合索引前面。没有索引的列不要做orderBy;聚簇索引；锁表update where like “%a”；
InnoDB用聚簇索引、索引就是数据，顺序存储，能缓存索引也能缓存数据；需要确保查询是通过索引完成；避免主键更新=会带来大量数据移动。
非单调的主键造成插入记录频繁调整B+Tree存储，必需ID自增字段，而不能用字符串主键和uuid主键PRIMARY KEY;也不搞多字段联合主键,只能定义一个主键，联合索引若有自动增长列则必须是第一列。
运行良好==〉普通表1000万条* 576B/row=5.4GB；单表最多撑死2千万条row。 表空间的最大容量为64TB/单表。
索引字段类型，影响性能，int最好，字符类型略差;复合索引a,b,c；在a,a b,a b c情况会用到；函数表达式不使用索引; like ‘a%’可以用上索引。全文索引like ‘%A%’派上用场;fn(A)=‘V’不能走索引应改成A=fn(‘V’);
Elasticsearch分布式索引引擎。swagger-REST；findAll findBy从REST替换掉；deleteBy update add两个Repository都需做copyProperties；
一小部分实体做ES索引的Repository，前端API/Repository替换成ES索引的graphQL内省eqp{,unit{id,.}}会自动选JPA：？;限制搜索的使用最好都能从elasticsearch跳转。shard分片基数,replicas复制副本+1数；index实体索引；
ELK是Elasticsearch、Logstash、Kibana日志收集分析系统@Slf4j/logback-spring.xml；spring-kafka消息引擎。
Docker-compose/Docker Hub；Kubernetes（K8s）；VMware虚拟docker不共存；Ubuntu/CentOS/Debian；
Elasticsearch接口改成@Query注解模式了。   ES不支持事务或复杂关联关系。ES非规范化宽表处理join字段存储冗余。
循环关联导致的ES存储死循环+事务死锁。嵌套的JPA关联对象直接发送给Elasticsearch是全量都存储的，所以很耗空间，必须控制和减少字段。
但是FST只能用于前缀查找，这也是Completion Suggester的局限所在,只能从左到右第一个字符开始的滚动提示。
ElasticSearch使用completion实现补全功能，局限性。 https://blog.csdn.net/qushaming/article/details/90479091
ElasticSearch使用手册宝典： https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html
版本升级到LIB_GRAPHQL_SPRING_BOOT_VER = 7.1.0后，不能用WhereTree来做前端查询了！input类型递归无法再使用！循环；导致ModelFilters这层类失去用途。
8版本graphQL支持interface A implements B; extend interface A implements B; 标准文档https://github.com/graphql/graphql-spec
Elasticsearch 默认堆内存是1GB;  配置https://www.elastic.co/guide/cn/elasticsearch/guide/current/heap-sizing.html
AppolloClient拦截Int最大数字+21亿,而ID是文本的,后端ID是映射Long的-+64位最大922亿亿。
注意版本配套　spring-boot-starter-data-elasticsearch包引用的ES和实际集群版本配套。
chrome安装elasticsearch客户端插件 head； https://github.com/mobz/elasticsearch-head ; https://www.cnblogs.com/hts-technology/p/8477258.html
Elasticsearch嵌套Nested:新增丶修改或删除一个嵌套文档，必须重新索引整个文档  https://blog.csdn.net/u012332735/article/details/62222953
性能测试：64.1万条设备cod+fNo两个字段，JPA模糊匹配约4.8秒。对比，Elasticsearch默认分词keyword.wildcardQuery查询0.85秒;
   分词用ngram3+3或3+6分词matchPhrase搜索最快都是0.48秒，但是比2个字段ngram3+3比ngram3+6的可节省19.6%磁盘空间。 测试结论是ngram3+3最好。

Hibernate要求连接到同一个数据库的所有服务器共享单个二级缓存或者不用缓存；Hibernate无法用一条语句同时对多个数据源/DB多库进行关联操作，JPA自动生成SQL无法跨库。
新安装Win7电脑后IP_MULTICAST_IF ->? Software Loopback Interface 1 INET6 绑定::1失败，导致infinispan无法使用。




管理=TB_DICT_FEEFIELD参数,1个发票多个任务;1任务Task对1个设备EQP;无任务手工报告;1个TASK映射1个ISP{可以多分项SubISPid}
制造库+未注册临时库;TB_DICT_FEESTANDARD 892条EFF_STA=1;TB_DICT_FEEFIELD有62条/ 交互时能改的参数
附加收费表TB_DICT_EXTRAFEE_MODIFIED=81条加收、减收条款;
INDUSTRY_PROP_COD单位细分种类； IF_SPEC_EQP特种电梯；
	 /EQP_TYPE+SORT+VART SUB_EQP_VART,OPE_TYPE, 关键技术参数也有用到；合计125条条款。
	 RATCONS<=6.0&&IF_BOIL_WALL==是&&SUB_EQP_VART==1003
测算明细;
SAFE_VALVE_NUM安全阀数量;收费关联TASK;协议关联TASK;
3个字段配置{TB_DICT_MGEFIELD/tb_dict_mgetable}。 TB_ISP_MGE.IF_OPE=两千次标记
IF_OLDBUILD/IS_MOVEEQP/两千次IF_OPE必须敲定;
任务分配,任务分派=责任人派工;
Unit行业性质INDUSTRY_PROP_COD?使用单位。
关键技术参数变更；
?没有任务没收费发票只用来流转审批做报告(出具增补的商品合格证)；
超出整改反馈期后复检任务自动终结，；
SDN申报-〉法定协议受理-〉法定业务受理-〉业务受理终结;
已经'终结''注销'的ISP报告就无法回退。
目录外的{针对设备}不一定不能是法定的{针对业务操作}性质。
定期检验，比如锅炉的每年一次的外部检验，每两年一次的内部检验，2个类型定检一起做?大包含小的。
流动作业设备才会出现JC省外注册。
BUSI_TYPE法定1/委托业务性质BUSI_TYPE=2委托的；
测厚点数=〉收费；派工时刻已经确认收费标准了；
工程（装置）名称 +管道名称（登记单元）1:N 管道编号{使用单位自定}；
焊口数量PE管428个钢管5个； IN_CAG/目录变更,.ISP_TYPE{检验范畴1机电2承压3}
.EQP_USE_PLACE场所性质 .EQP_USE_OCCA起重才用.EXTEND_USE_YEAR延长使用年限
.MAKE_DATE制造日期.SAFE_LEV安全评定等级{JC才用}2000设类	；
检验范畴.ISP_TYPE：机电承压类->科室分配/发票会计。
EQP_LEVEL设备等级; 下次检验日期2(机电定检，内检，全面）;1->年度（外部、在线）检验 粗的检；
下次检验日{预设定大小保养时间},检验等级规模。检测记录，检测规定时间。
if等级1/3/的，耐压试验6年{2.5年}一次。https://wenku.baidu.com/view/369ebf72760bf78a6529647d27284b73f3423615.html
TB_TASK_MGE.IF_WORKEQP_TEST'5000厂车是否工作装置测试'
EQP_PRICE；TB_TASK_MGE.IF_AQ_TEST'4000是否安全监控管理系统试验验证'
TB_BOIL_PARA.IF_BOIL_WALL'是否有炉墙锅炉；
TB_TASK_MGE.INST_PRICE单台工程施工费（万元）
TB_BOIL_PARA.RATCON'1000额定功率(MW)/蒸发量；
IF_VERTICAL锅炉结构形式；BURNINGTYPE燃料种类@
PIPELINE_LEVEL，PIPELINE_MEDIUM管道材质，LAY_MODE管道敷设方式NOMINAL_DIA公称直径（mm）LENGTH；
CONTAINERVOLUME压力容器容积（立方米），DESPRE设计压力（MPa）
CAPABLIMITNUM氧舱2400容限（人）；
ELEFLOORNUMBER电梯层数，ELEHEIGHT3000提升高度，SLIDWAY_USE_LENG3300人行道使用区段长度,RUNVELOCITY运行速度,IF_OLDBUILD_INST旧楼加装;
IF_UNNORMAL是否非标电梯，
/.IF_SPEC_EQP是否特殊设备；/IMPORT_TYPE进口类型,
CHAENGLOAMAIN{不算4D00,4800}主钩）起重机械载荷；
BERNUM停车设备泊位数4D00，ELEHEIGHTMAIN主钩）起升高度；IF_TWO_CAB双司机室，IF_TWO_LCAR有否双小车，IF_GRAB_B否抓斗，
IF_SUCTORIAL有否起重吸盘，IF_CONTAIN_H否集装箱吊具，SPAN跨度（m；TB_CRANE_PARA.IF_UNNORMAL非标;IF_XZS否行走式,CHAADVMOM起重力矩（吨米;IF_ZJCC否整机出厂整机上岸的;
4800TB_LIFT_PARA.UP_HIGH提升高度（m,IF_TWO_HOIS是否双笼;
TB_TASK_MGE.IF_HOLD_TEST'4000是否载荷试验'？有些属性是放在task有些isp表？
游乐AMUS_TYPE游乐设施等级类型，IF_SHIFT是否移动大型游乐；
SUB_EQP_VART!=1002=〉大项套子项目TB_DICT_FEESTANDARD.FEE_TAG'1主收费 0子收费'；
.FEE_COD .FEE_STANDARD{叙述文} .BL_EXPR .RS_EXPR 树形三级层次:承压.x.y.z；
.FEE_MOD{1主只能添加1项,2=附加收费可以添加多个};/.ISP_TYPE'1:机电156条，2：承压{677条}，3：综合检验/不区分?58条，4考试{空的}';
预定义收费模板/机构地区定？可加可删的，实际业务有做到的，可添加可重复项目，生成明细项目。
30~60如何收/自定数额。缺省就设置的，可以自选的条款。
TB_DICT_EXTRAFEE_MODIFIED.EXTRAFEE_TYPE'0过程价1最终价2过程完毕后附加价3自定义条'
/.FEE_MOD作废 '收费类型(8：基础收费加收?srcPrice）（9：1基础+2附加+8基础加收?tmpCalPrice）10自定义条'
INDUSTRY_PROP_COD==O82||INDUSTRY_PROP_COD==O821||
nu_ll==1表达True?明面上多收可能/油头; .ISP_TYPE2承压 ,管道8000检验费低于500元的按500元收取;
如果两台同时进行检验的，按收费总额的90%收(单任务同种设备数);
在化学介质、易燃介质等毒性危害和爆炸危险环境下进行检验作业或接触生产性粉尘作业危害程度在II级（含II级）及II级以上环境下进行检验作业的加收30%；
减免有相反问题：裁量权/用户知情没=不走途。
加急检验（三个工作日取检验报告）加收20%; 条款？
廉租住房、公共租赁住房、经济适用住房和棚户区改造安置住房等保障性安居工程项目免收行政事业性收费和政府性基金=扯呼;
tmpCalPrice=附加检验收费+基础检验加收费+srcPrice{=基础检验收费{主项收费+}};
基础检验收费 srcPrice   FEE_MOD1主只能添加1项,
附加检验收费 tmp2Price {FEE_MOD2=附加收费可以添加多个}
基础检验加收费 tmp8Price .FEE_MOD == 8
其他收费 tmp9Price .FEE_MOD == 9
TB_TASK_PRICEDET=预设后的。
带分项责任人派工多个流程ISP/subIsp;部门分配给单OFFICE_ID;科室分配{单个=组长？PROJ_USER_ID},=> 派工;
责任人PROJ_USER_ID,任务负责人,有资格检验员;人员TB_TASK_TO_ISPPROJ.JY_USER_ID；
负责人[可多个]E_PROJ_USER_ID +检验员+协检员
ISP对等概念TB_TASK_TO_ISPPROJ几种人员，分项独立TB_ISP_SUBPROJ表;
TB_TASK_TO_ISPPROJ.E_PROJ_USER_ID'任务负责人(包含检验员)'.JY_USER_ID检验员'.XJ_USER_ID协检员'.MAIN_FLAG1：主报告0：分项报告）'
分项.E_PROJ_USER_ID可=null;三类人员?都能多个的，可无包含关系。
TB_ISP_SUBPROJ分项对等简化ISP表,否已经送组合:合并送审/.CHL_SUB_SEQ分项报告下序号;
TB_ISP_MGE.WORK_DAY'工作日数（不合格去掉等待日期）.REP_INTIME报告及时率'
TB_ISP_MGE.NOTELIGIBLE_FALG不合格标志'


IDEA编译乱码 Build Output提示信息乱码  https://blog.csdn.net/qq_39232249/article/details/104917424
springboot 启动 指定配置文件 https://www.cnblogs.com/vitoboy/p/12729663.html
打包jar用 gradle - special-equipment - Tasks -build -jar 直接打包最简单了
命令行启动\special-equipment-backend\build\libs>java -jar -Dspring.profiles.active=dev spec-SNAPSHOT.jar
家里 D:\DEV\jdk13.1\bin>java -jar -Dspring.profiles.active=home D:\coding\home\unibackend\special-equipment-backend\build\libs\special-equipment-backend-0.1.0-SNAPSHOT-20210211061414.jar

VMoptions       -Dfile.encoding=UTF-8
spring-boot-starter-jta-atomikos可删除替代。  Heroku，OpenShift属于PaaS。Amazon EC2属于IaaS。
和云服务相关的： Kubernetes； Spring Cloud for Cloud Foundry（平台即服务）=商业平台。
Spring Cloud Data Flow=部署界面,图形编辑器,组装成流数据管道；
Spring Cloud Stream=消息驱动,发布-订阅{商业云服务PaaS; Kafka,RabbitMQ}；
Spring Cloud Config=dev/production配置文件(git仓库)?+{Spring Boot Actuator+Spring Config Client;bootstrap.yml;服务端+客户端都有};
Spring Cloud Netflix{云核心||Eureka服务器-服务注册,Eureka客户机,Ribbon客户端负载均衡,
                    Feign就=REST接口适配器;Zuul=服务端做路由控制负载均衡=代理;Hystrix断路器,etcd服务发现}；
Spring Cloud Consul=云代理,与Netflix对皮尅。
Spring Cloud Zookeeper=客户端,代理(服务发现、client-side load-balancing负债均衡，配置);与Spring Cloud Consul对皮尅？；
Spring Cloud Sleuth=服务跨度(多个微服务)日志。
Spring Cloud Security=(OAuth2 token)单点登录。
Spring Cloud Skipper=版本管理和部署工具(模式支持1-Local、2-CloudFoundry和3-Kubernetes,...OpenShift,AWS,微软Azure,Docker)。
Spring Cloud OpenFeign=REST接口MVC适配器;
Spring Cloud Kubernetes=部署到Kubernetes{.PK.本地Local应用};
Spring Cloud Gateway=路由限流。
Spring Cloud Function=抽象serverless业务与运行时分离(适配器AWS Lambda, Microsoft Azure, Apache OpenWhisk;REST函数HTTP端点)；
Spring Cloud Contract=云开发测试，云集成测试；
Spring Cloud Task=任务;
Spring Cloud Bus=(RabbitMQ server消息,所谓Broker的系统)；
使用Kubernetes部署和发布,Kubernetes支持Docker，而Docker容器镜像Ubuntu替代VMware虚拟机，云主机购买CentOS。
阿里云没有服务器托管的=IDC机房；挂载云盘；阿里云 OCS开放缓存服务；阿里云云上Elasticsearch；
ECS自建Elasticsearch=同一地域内通过内网互通，不收取费用；需要面临高峰期洪峰时ECS供应链问题，低峰期的闲置可能造成资源浪费；文件存储NAS。
阿里 云服务器 ECS + 云数据库 RDS 版 + 对象存储 OSS云盘{API,先解冻后才能读取} + 容器服务；
使用容器服务Kubernetes版在一组云服务器ECS上通过Docker容器管理应用生命周期，CentOS 7.x， 传统型负载均衡CLB（原SLB），弹性公网IP。
普通模式NAT下，公网IP存在于网关设备，并不在ECS实例的网卡上，所以在操作系统内看不到公网IP，只能看到网卡上的私网IP；EIP网卡可见模式。
专有网络VPC中自建NAT网关，使得ECS服务器不额外花钱可访问外网。

