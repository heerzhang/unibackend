java13升级中，CentOS；
Java SE Development Kit 13(JDK13) 13.0.1下载  = https://www.7down.com/soft/344930.html
windown10安装软件打开时以管理员身份安装软件不然容易出问题,jdk13.0.2没有jre文件夹，所以需要手动生成;
win10安装JDK13.0.2 https://blog.csdn.net/eee528/article/details/104109872
环境变量JAVA_HOME C:\Program Files\Java\jdk1.8.0_121   E:\Program Files\jdk13-1
JRE_HOME CLASSPATH先不管了；
JRE运行时{我是开发的}先不管了；
IDEA右上角的启动project structure对话框直接修改每个工程单独jdk路径。
gradle升级中，gradle-6.3-rc-1下载解压 = https://services.gradle.org/distributions/
要Gradle Wrapper去统一Gradle的版本，避免开发团队因为Gradle版本不一致而产生问题。
配置环境变量 D:\proj\gradle-6.3\bin。全局配置=https://www.jianshu.com/p/6b9cd92c4920
GRADLE_USER_HOME 仓库= E:\del\repository
Gradle 安装与配置 https://www.cnblogs.com/NyanKoSenSei/p/11458953.html
GRADLE_HOME/init.d/目录下的init.gradle
IDEA直接配置加上jar远端库=使用阿里的依赖库=https://www.cnblogs.com/lihuawei/p/12460193.html
java还未支持协程Fiber；js其实单线程。
使用 Undertow 替换掉 Tomcat;  工程：compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: '2.2.5.RELEASE'
移除SpringMvc相关组件以及Tomcat，Jetty，Undertow等Web容器，使用Netty构建HttpServer来实现轻量级的RestfulAPIs。
高性能 Web 服务框架=Undertow、Vert.x 和 Netty ;  Spring WebFlux 默认是使用 Netty 作为 Web 容器的。

https://github.com/graphql-java-kickstart/samples

windows 10中Tomcat安装和部署的教程  https://www.jb51.net/article/173324.htm ; 端口号冲突 JRE=jdk目录 .bin\startup.bat。
@SpringBootApplication没有web.xml而老Spring MVC项目web.xml添filter-mapping、servlet-mapping的。https://www.pocketdigi.com/20170527/1576.html
Jenkins发布部署 Kubernetes集群；拉取源码选择git,http://代码服务器（gitbucket）；GitBucket自己的GitHub。码云Gitee= Git代码托管;网站配置免费SSL证书;
GraphQLHttpServlet:GraphQLConfiguration->createSchema->SchemaParser+makeExecutableSchema;
启动初始化链条=HostConfig->tomcat内嵌容器->initServlet->GraphQLHttpServlet.init()->GraphQLConfiguration->createSchema()->SchemaGenerator:不可能重新改file("schema.graphqls")。
而对每个http请求流程=SocketProcessorBase<NioChannel>：FilterChain：WsFilter->初始化connection->doFilter()->HttpServlet:service(req,resp)->AbstractGraphQLHttpServlet.doPost+doGet();
单个前端<ApolloProvider client={client}>只能有一个Endpoint==一个Servlet;单个SPA页就不好做的。反而单个后端容易做多个接口Endpoint多个Schema path。
Jetty 和 undertow 服务器SpringBoot 使用轻量级的 undertow 容器替代重量级 Tomcat https://hacpai.com/article/1575252759539
三个集成 directives + servlet-hello-world + 最後那個,,;
rest方式发送包{   "query": "{hello(value394:\"sdfds1124cv\") }" }

Gradle问题：在IDEA新建立时gradle java工程,多模块。IDEA在配置Build>Gradle:有个radio三选一很关键。
Use default gradle wrapper(recommended) 需要配套修改/gradle/wrapper gradle/wrapper/gradle-wrapper.properties的版本号，distributionUrl=https\://downloads.gradle-dn.com/distributions/gradle-6.3-rc-1-all.zip
distributionUrl=https\://services.gradle.org/distributions/gradle-4.10-all.zip
gradle还和Java版本也有关啊[5.6.4]，gradle自己还有版本问题，Gradle JVM版本设置java10可行。
build.gradle里面wrapper{gradleVersion='6.3-rc-1'}直接运行3行脚本就可初始化gradle/wrapper/*，但IDEA设置Gradle JVM版本到/repository/wrapper/dists/gradle/.。Gradle JVM不要选Use Project JDK/JAVAHOME;
测试通过gradle-5.6.4 刷新工程的时候需要设置Gradle JVM到低版本，然后正常编译恢复高版本JDK};
gradle/wrapper/gradle-wrapper.properties要自动下载，dists\.\gradle-5.6.4\init.d还不能加init.gradle,就通过了，可能下载文件不正宗的。
https://github.com/graphql-java-kickstart/graphql-spring-boot
参考graphql-spring-boot-autoconfigure\x.graphql.boot.GraphQLWebAutoConfiguration，复制和定做特别的接口1，2 xxxAutoConfiguration。

bean注入@Qualifier存在多个同类型bean时，通过value值选择bean方法名字就是Bean的ID；xxx(@Qualifiler(value="d") My my);  https://www.wandouip.com/t5i352131/

添加ServletConfiguration模式不能處理數據{Resolver不執行}能報schema語法異常。PublicGqwAutoConfiguration配置路綫的能QueryResolver數據卻無法返回數據(directive能執行)同時不能報語法異常。
目標是com.coxautodev.graphql.tools.SchemaParser的中同名SchemaParser定制替換{@Autowired SchemaParser+ build變成新的SchemaParser}。
若/config/PublicGqwAutoConfiguration.java移除了就能恢复旧正常的graphql/iql，而Servlet模式的未受此影响。
@某些注解是编译用的，IDEA配置 Build>Compiler>Annotation Processors勾上。
oauth2..JwtAuthenticationToken;认证方式＝jwkSetUri关键第三方认证redirectUri Provider userInfoUri还要给UserDetailsService配套存储Repository。
GitHub私有库国内加速访问的办法 DNS污染？  https://www.sohu.com/a/312804771_100213241
POST http://localhost:9000/graphql
Content-Type: application/json; charset=utf-8
Cache-Control: no-cache

{   "query": "{hello(value2:\"sdfds1124cv\") }" }
Webflux(REST || Thymeleaf模板)Reactive Web,Reactor项目实现Reactive Streams,感觉graphql是并行竞争关系，但是Webflux是REST，对标WebMVC模板。实际上starter-web对标starter-webflux二选一。
Webflux核心使用了异步资源加载！需要ReactiveMongoRepository，无法用原来数据库@Entity+原来Repository。给客户应答可能要分多次/数据拆分陆续返回模式。 前端需要EventSource SSE的JS；
看Webflux其实在请求应答返回数据很少的就毫无效果哦！graphql分页数据。实体表多页查询，一次要获取很多对象吗，正常网页需要吗，除非下载转储文件这类的功能｛毕竟使用频率较少｝。
web容器更换Undertow依赖支持HTTP、HTTPS、HTTP/2多路复用机制；  http://www.imooc.com/article/274138
免费申请SSL证书  https://freessl.org

POST http://localhost:8673/graphql
Content-Type: application/json; charset=utf-8
Cache-Control: no-cache
{   "query": "{hello2(value1:\"sdsR65adaf\") }" }
  @Bean
  @ConditionalOnMissingBean
  public GraphQLSchemaServletProvider graphQLSchemaProvider(GraphQLSchema schema) {
    return new DefaultGraphQLSchemaServletProvider(schema);
  }
import { WebSocketLink } from 'apollo-link-ws';有加了一层。
new WebSocket('ws://localhost:8673/subscriptions')
websocket和http的endpoint是路径/A/B，不可以嵌套，否则上级目录注册的servlet优先抢走处理。
谷歌Chrome引入SameSite cookie将提高隐私安全性能，可保证仅通过HTTPS连接访问跨站cookie。限制cookie被第三方网站追踪。
Spring Security——基于表达式的权限控制，Spring 表达式语言(Spring EL)；SpEL 操作符; 正则表达式匹配?
@PreAuthorize("hasRole('ROLE_'.concat(this.class.simpleName))")
prisma=类比后端graphQL服务器。
jcache是一种缓存门面规范，并不包含具体缓存实现;
org.hibernate:hibernate-ehcache:建立在Ehcache 2上；现推荐hibernate-jcache它可支持Ehcache 3包。
高版本ehcache 3;　http://www.ehcache.org/documentation/3.8/
1 本地缓存Ehcache、Caffeine; ; 2 分布式缓存 Client-Server模式缓存Redis分布式缓存Redis;
Hazlecast的商用授权下载商用版本这些配置才能生效？ssl传输Wan。
ClusteredLocalCachedRedisRegionFactory仅限于Redisson PRO版本  https://stackoverflow.com/questions/7650129/redis-as-hibernate-second-level-cache

！！Redisson文档细节，Hibernate版本还算独立的？　 http://www.voidcc.com/redisson
开启 redis-server.exe redis.windows.conf   https://www.cnblogs.com/wuwuyong/p/11697643.html
maven jar冲突问题<exclusions><exclusion>  　

redisson详细配置多方案　https://blog.csdn.net/zilong_zilong/article/details/78252037
hibernate-redis.properties文件不需要了。
redis官方文档；每种集成框架模式场合的配置都有差异,缓存对接目的地不同: https://github.com/redisson/redisson/wiki/Table-of-Content；
IMDG缓存到底和那一个框架hibenate做集成的 https://github.com/redisson/redisson/tree/master/redisson-hibernate
修改redisson超时设置后要删除redis存储文件才行。若有region有用于COLLECTION> ENTITY > NATURAL_ID按这顺序配ttl时间。
启动指定profiles; java -jar -Dspring.profiles.active=dev  demo-0.jar  //application-dev.properties：开发
Spring-security-oauth2之DaoAuthenticationProvider用于响应UsernamePasswordAuthenticationToken身份验证请求
Infinispan 支持hibernate分布式二级缓存　Key/Value数据库　　@Cache(usage = CacheConcurrencyStrategy.READ_WRITE, region = "")如对数据没有强一致性诉求可考虑采用异步模式(建议Replication Queue)；
　infinispan-hibernate-cache-v53　  compile group: 'org.infinispan', name: 'infinispan-core', version: '11.0.3.Final'
"分布式数据网格”Hazlecast IMDG商用版本这些配置才能生效？ssl传输/WAN/。
ignite在SQL层还不支持事务一致性=还只能算是K/V缓存，它不是关系数据库，节点平等;可作Hibernate二级缓存+Spring缓存；ignite可用上SSL and TLS传输；可自动集成外部数据库；off-heap内存。
  F:\22222\hibernate-l2-grid-generic-dao-master
Hibernate手册type(p)=A; type(p) in (B,C);  coalesce(name,nick,''); date<{d '2000-01-01'}; current_timestamp() year(current_date()) locate(,,)
　 not member of;  maxelement(holidays)；where kit member of m.kittens；where 3 > all elements(p.scores)；
HQL统计select new map( max(c.bodyWeight) as max, min() as min, count(*) as n ) from Cat c；new list(,name ,); CAST(实体类);

GraphQL Schema 图数据库Dgraph; Union联合类型成员须是具体对象类型，不能用接口或其他联合型来 | ; input型给后端便利。C implements F 要求A必须包含F的全部字段并相同，
 内联片段 ... on A { adds }; Union是变体=得使用条件片段... on W 解析__typename; implements B,C{ }; type D{x: unionX;} ; 无法A extend B{};
GraphQL接口返回[union]的对Java实体类有限制严格/报错no class could be found for that type。

