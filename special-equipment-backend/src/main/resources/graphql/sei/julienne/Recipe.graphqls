type Recipe{
    id: ID!
    title: String!
    plain: String
    author: String
    createdBy: User
    updatedAt: String
    image: String
    ingredients: String
    description: String
}

type Following{
    toUser: User
    fromUser: User
    confirmed: Boolean
}


extend type Query {
    findRecipe(id:ID!):Recipe
    useFollowing(toUser: Boolean): [Following]
    findAllRecipeFilter(where: WhereTree, offset:Int!, first:Int=20, orderBy:String, asc:Boolean=true): [Recipe]!
}

extend type Mutation {
    newRecipe(title: String!, author:String, plain:String, image:String, ingredients:String, description:String) : Recipe!
    #发起关注
    requestFollow(fromUser: ID!, toUser: ID!): Boolean!
    confirmFollow(userId: ID!): Boolean!
    delRequestFollow(toUser: ID!): Boolean!
    dismissFollowOf(fromUser: ID!): Boolean!
}

