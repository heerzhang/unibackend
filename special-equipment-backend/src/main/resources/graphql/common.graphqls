directive @authr(
    qx: [String] = ["USER"]
) on FIELD_DEFINITION

enum LJ_TYPE { AND, OR, NOT, DSELF }
enum OPERATOR { EQ,NE,GE,LE,GT,LT,BTW,IN,LK,
        EMPTY,NULL,EXI,NEXI,TRUE,FALSE,NNULL,NEMPTY  }

"不支持中文的名字"
enum AuthorityName {  ROLE_SOMEONE,  ROLE_USER,  ROLE_ADMIN,   ROLE_Manager }


#输入复合对象必须POJO+Query的java代码有地方用到了才算
input DeviceCommonInput {cod: String, address: String, oid: String, lat:String
    }

"这里的类型自成体系和java不同的。"
input WhereLeaf { s:String, o:OPERATOR, l:ExpressItem, r:ExpressItem,
    sv:String, sa:[String], dt:String, dv:BigDecimal, lv:Long,
    dta:[String], da:[BigDecimal], la:[Long]
    }
input WhereTree { lj:LJ_TYPE,  a:WhereLeaf, as:[WhereLeaf],
    w:WhereTree, ws:[WhereTree], sup:WhereTree
 }
input ExpressItem {
    y:String, l:ExpressItem, r:ExpressItem, s:String,
    sub:SubSelect, cwt:[CaseExpression], a:[ExpressItem],
    sv:String, lv:Long, dv:BigDecimal, dt:String,
    bv:Boolean, len:Int
}
input SubSelect {
     s:String, e:ExpressItem,  from:String,
     where: WhereTree,  grp:[ExpressItem], hav:WhereTree
}
input CaseExpression {
   w:ExpressItem,  b: WhereTree,   t:ExpressItem
}

#复合众多参数Input types may be lists of another input type, or a non‐null variant of any other input type像JS对象样
input ComplexInput { username: String, mobile: String, dev:DeviceCommonInput }

