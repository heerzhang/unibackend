interface Equipment{
    id:ID!
    cod: String!
    type: String!
    sort: String!
    vart: String!
    oid: String
    ust: UseState_Enum!
    reg: RegState_Enum!
}
#不分类设备
type Eqp implements Equipment{
    id:ID!
    cod: String!
    oid: String
    type: String!
    sort: String!
    vart: String!
    ust: UseState_Enum!
    reg: RegState_Enum!
    fno: String
    isps: [Isp]
    pos: Address
    #task: [Task]
    useu: Unit
    svp:String,
    pa:String
}

type EqpEs implements Equipment{
    id:ID!
    cod: String!
    oid: String
    type: String!
    sort: String!
    vart: String!
    ust: UseState_Enum!
    reg: RegState_Enum!
    fno: String
    #task: [TaskEs!]
}

extend type Query {
    getDevice(id:ID!): Equipment
    getEqpEs(id:ID!): EqpEs
    getDeviceSelf(id:ID!): Equipment
    findEQPbyCod(cod: String!): Equipment
    findEQPLike(filter: DeviceCommonInput): [Equipment]!
    findAllEQPsFilterInput(filter: DeviceCommonInput!, offset:Int!, first:Int=20, orderBy:String, asc:Boolean=true): [Equipment]!
    getAllEQP: [Equipment]!
    countAllEQP: Int!
    countAllEQPsFilter(filter: DeviceCommonInput!): Int!
    #升级弃用countAllEQPsWhere(where: WhereTree): Int!
    #findAllEQPsFilter(where: DeviceCommonInput, offset:Int, first:Int, orderBy:String, asc:Boolean): [Eqp]!
    #findAllEQPsFilter2(where: DeviceCommonInput, offset:Int, first:Int, orderBy:String, asc:Boolean): [Equipment]!
    getAllEqpEsFilter(where: DeviceCommonInput, offset:Int, limit:Int, orderBy:String, asc:Boolean): [Equipment]!
}

extend type Mutation {
    newEQP(type: String!, in: DeviceCommonInput!) : Equipment!
    "因为type普通对象直接用于输入参数的话,语义比较模糊,所以graphQL要求另外单独建"
    setEQPPosUnit(id:ID!, pos: ID!, owner: ID!, maint: ID) : Equipment!
    #模型接口和java执行函数的参数顺序和类型是关键，参数名字却可不一致。接口函数名要唯一。
    buildEQP(id:ID!, owner: ID!, in: DeviceCommonInput) : Equipment
    buildEQP2(id:ID!, owner: ID!, info: DeviceCommonInput) : Equipment
    testEQPModify(id:ID!, oid: String ): Equipment
    testEQPFindModify(cod:String!, oid: String ): String
    testEQPStreamModify(cod:String!, oid: String ): String
    testEQPCriteriaModify(cod:String!, oid: String, type: String): Equipment
    testEQPcreateQueryModify(cod:String!, oid: String ): String
    invalidateEQP(whichEqp:ID!, reason: String!) : Boolean!
    removeEQP(id:ID!) : Boolean!
    syncEqpFromOld(offset:Int, limit:Int): [String]!
    syncEqpEsFromEqp(offset:Int, limit:Int): [String]!
}

