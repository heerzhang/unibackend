type Elevator implements Equipment,IfElevator{
    id:ID!
     cod: String!
     oid: String
     type: String!
     sort: String!
     vart: String!

     liftHeight: String

}

type Escalator implements Equipment,IfElevator{
    id:ID!
    cod: String!
    oid: String
    type: String!
    sort: String!
    vart: String!

    liftHeight: String
    steps: String

}
interface IfElevator{
    liftHeight: String
}

extend type Query {

    findAllEQPsFilter2(where: DeviceCommonInput, offset:Int, first:Int, orderBy:String, asc:Boolean): [Equipment]!
}

extend type Mutation {
    buildElevator(cod: String!, type: String!, oid: String) : Elevator
    buildEscalator(cod: String!, type: String!, oid: String) : Escalator
}

